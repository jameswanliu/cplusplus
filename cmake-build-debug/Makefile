# CMAKE generated file: DO NOT EDIT!
# Generated by "MinGW Makefiles" Generator, CMake Version 3.15

# Default target executed when no arguments are given to make.
default_target: all

.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:


#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:


# Remove some rules from gmake that .SUFFIXES does not remove.
SUFFIXES =

.SUFFIXES: .hpux_make_needs_suffix_list


# Suppress display of executed commands.
$(VERBOSE).SILENT:


# A target that is always out of date.
cmake_force:

.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

SHELL = cmd.exe

# The CMake executable.
CMAKE_COMMAND = "D:\Program Files\JetBrains\CLion 2019.2.5\bin\cmake\win\bin\cmake.exe"

# The command to remove a file.
RM = "D:\Program Files\JetBrains\CLion 2019.2.5\bin\cmake\win\bin\cmake.exe" -E remove -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = D:\Users\kevin\cworkspace\c_plus\cplusplus

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = D:\Users\kevin\cworkspace\c_plus\cplusplus\cmake-build-debug

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	"D:\Program Files\JetBrains\CLion 2019.2.5\bin\cmake\win\bin\cmake.exe" -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache

.PHONY : rebuild_cache/fast

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "No interactive CMake dialog available..."
	"D:\Program Files\JetBrains\CLion 2019.2.5\bin\cmake\win\bin\cmake.exe" -E echo "No interactive CMake dialog available."
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache

.PHONY : edit_cache/fast

# The main all target
all: cmake_check_build_system
	$(CMAKE_COMMAND) -E cmake_progress_start D:\Users\kevin\cworkspace\c_plus\cplusplus\cmake-build-debug\CMakeFiles D:\Users\kevin\cworkspace\c_plus\cplusplus\cmake-build-debug\CMakeFiles\progress.marks
	$(MAKE) -f CMakeFiles\Makefile2 all
	$(CMAKE_COMMAND) -E cmake_progress_start D:\Users\kevin\cworkspace\c_plus\cplusplus\cmake-build-debug\CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	$(MAKE) -f CMakeFiles\Makefile2 clean
.PHONY : clean

# The main clean target
clean/fast: clean

.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	$(MAKE) -f CMakeFiles\Makefile2 preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	$(MAKE) -f CMakeFiles\Makefile2 preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles\Makefile.cmake 1
.PHONY : depend

#=============================================================================
# Target rules for targets named cplusplus_base

# Build rule for target.
cplusplus_base: cmake_check_build_system
	$(MAKE) -f CMakeFiles\Makefile2 cplusplus_base
.PHONY : cplusplus_base

# fast build rule for target.
cplusplus_base/fast:
	$(MAKE) -f CMakeFiles\cplusplus_base.dir\build.make CMakeFiles/cplusplus_base.dir/build
.PHONY : cplusplus_base/fast

#=============================================================================
# Target rules for targets named template

# Build rule for target.
template: cmake_check_build_system
	$(MAKE) -f CMakeFiles\Makefile2 template
.PHONY : template

# fast build rule for target.
template/fast:
	$(MAKE) -f CMakeFiles\template.dir\build.make CMakeFiles/template.dir/build
.PHONY : template/fast

#=============================================================================
# Target rules for targets named duotai

# Build rule for target.
duotai: cmake_check_build_system
	$(MAKE) -f CMakeFiles\Makefile2 duotai
.PHONY : duotai

# fast build rule for target.
duotai/fast:
	$(MAKE) -f CMakeFiles\duotai.dir\build.make CMakeFiles/duotai.dir/build
.PHONY : duotai/fast

#=============================================================================
# Target rules for targets named string

# Build rule for target.
string: cmake_check_build_system
	$(MAKE) -f CMakeFiles\Makefile2 string
.PHONY : string

# fast build rule for target.
string/fast:
	$(MAKE) -f CMakeFiles\string.dir\build.make CMakeFiles/string.dir/build
.PHONY : string/fast

#=============================================================================
# Target rules for targets named const

# Build rule for target.
const: cmake_check_build_system
	$(MAKE) -f CMakeFiles\Makefile2 const
.PHONY : const

# fast build rule for target.
const/fast:
	$(MAKE) -f CMakeFiles\const.dir\build.make CMakeFiles/const.dir/build
.PHONY : const/fast

#=============================================================================
# Target rules for targets named casttype

# Build rule for target.
casttype: cmake_check_build_system
	$(MAKE) -f CMakeFiles\Makefile2 casttype
.PHONY : casttype

# fast build rule for target.
casttype/fast:
	$(MAKE) -f CMakeFiles\casttype.dir\build.make CMakeFiles/casttype.dir/build
.PHONY : casttype/fast

#=============================================================================
# Target rules for targets named extend

# Build rule for target.
extend: cmake_check_build_system
	$(MAKE) -f CMakeFiles\Makefile2 extend
.PHONY : extend

# fast build rule for target.
extend/fast:
	$(MAKE) -f CMakeFiles\extend.dir\build.make CMakeFiles/extend.dir/build
.PHONY : extend/fast

#=============================================================================
# Target rules for targets named namespaces

# Build rule for target.
namespaces: cmake_check_build_system
	$(MAKE) -f CMakeFiles\Makefile2 namespaces
.PHONY : namespaces

# fast build rule for target.
namespaces/fast:
	$(MAKE) -f CMakeFiles\namespaces.dir\build.make CMakeFiles/namespaces.dir/build
.PHONY : namespaces/fast

#=============================================================================
# Target rules for targets named function

# Build rule for target.
function: cmake_check_build_system
	$(MAKE) -f CMakeFiles\Makefile2 function
.PHONY : function

# fast build rule for target.
function/fast:
	$(MAKE) -f CMakeFiles\function.dir\build.make CMakeFiles/function.dir/build
.PHONY : function/fast

#=============================================================================
# Target rules for targets named functionoverloading

# Build rule for target.
functionoverloading: cmake_check_build_system
	$(MAKE) -f CMakeFiles\Makefile2 functionoverloading
.PHONY : functionoverloading

# fast build rule for target.
functionoverloading/fast:
	$(MAKE) -f CMakeFiles\functionoverloading.dir\build.make CMakeFiles/functionoverloading.dir/build
.PHONY : functionoverloading/fast

#=============================================================================
# Target rules for targets named friend

# Build rule for target.
friend: cmake_check_build_system
	$(MAKE) -f CMakeFiles\Makefile2 friend
.PHONY : friend

# fast build rule for target.
friend/fast:
	$(MAKE) -f CMakeFiles\friend.dir\build.make CMakeFiles/friend.dir/build
.PHONY : friend/fast

#=============================================================================
# Target rules for targets named duotai_extend

# Build rule for target.
duotai_extend: cmake_check_build_system
	$(MAKE) -f CMakeFiles\Makefile2 duotai_extend
.PHONY : duotai_extend

# fast build rule for target.
duotai_extend/fast:
	$(MAKE) -f CMakeFiles\duotai_extend.dir\build.make CMakeFiles/duotai_extend.dir/build
.PHONY : duotai_extend/fast

#=============================================================================
# Target rules for targets named object_size

# Build rule for target.
object_size: cmake_check_build_system
	$(MAKE) -f CMakeFiles\Makefile2 object_size
.PHONY : object_size

# fast build rule for target.
object_size/fast:
	$(MAKE) -f CMakeFiles\object_size.dir\build.make CMakeFiles/object_size.dir/build
.PHONY : object_size/fast

#=============================================================================
# Target rules for targets named seqlist

# Build rule for target.
seqlist: cmake_check_build_system
	$(MAKE) -f CMakeFiles\Makefile2 seqlist
.PHONY : seqlist

# fast build rule for target.
seqlist/fast:
	$(MAKE) -f CMakeFiles\seqlist.dir\build.make CMakeFiles/seqlist.dir/build
.PHONY : seqlist/fast

#=============================================================================
# Target rules for targets named container

# Build rule for target.
container: cmake_check_build_system
	$(MAKE) -f CMakeFiles\Makefile2 container
.PHONY : container

# fast build rule for target.
container/fast:
	$(MAKE) -f CMakeFiles\container.dir\build.make CMakeFiles/container.dir/build
.PHONY : container/fast

FunctionOverloading.obj: FunctionOverloading.cpp.obj

.PHONY : FunctionOverloading.obj

# target to build an object file
FunctionOverloading.cpp.obj:
	$(MAKE) -f CMakeFiles\functionoverloading.dir\build.make CMakeFiles/functionoverloading.dir/FunctionOverloading.cpp.obj
.PHONY : FunctionOverloading.cpp.obj

FunctionOverloading.i: FunctionOverloading.cpp.i

.PHONY : FunctionOverloading.i

# target to preprocess a source file
FunctionOverloading.cpp.i:
	$(MAKE) -f CMakeFiles\functionoverloading.dir\build.make CMakeFiles/functionoverloading.dir/FunctionOverloading.cpp.i
.PHONY : FunctionOverloading.cpp.i

FunctionOverloading.s: FunctionOverloading.cpp.s

.PHONY : FunctionOverloading.s

# target to generate assembly for a file
FunctionOverloading.cpp.s:
	$(MAKE) -f CMakeFiles\functionoverloading.dir\build.make CMakeFiles/functionoverloading.dir/FunctionOverloading.cpp.s
.PHONY : FunctionOverloading.cpp.s

Funtion.obj: Funtion.cpp.obj

.PHONY : Funtion.obj

# target to build an object file
Funtion.cpp.obj:
	$(MAKE) -f CMakeFiles\function.dir\build.make CMakeFiles/function.dir/Funtion.cpp.obj
.PHONY : Funtion.cpp.obj

Funtion.i: Funtion.cpp.i

.PHONY : Funtion.i

# target to preprocess a source file
Funtion.cpp.i:
	$(MAKE) -f CMakeFiles\function.dir\build.make CMakeFiles/function.dir/Funtion.cpp.i
.PHONY : Funtion.cpp.i

Funtion.s: Funtion.cpp.s

.PHONY : Funtion.s

# target to generate assembly for a file
Funtion.cpp.s:
	$(MAKE) -f CMakeFiles\function.dir\build.make CMakeFiles/function.dir/Funtion.cpp.s
.PHONY : Funtion.cpp.s

Seqlist.obj: Seqlist.cpp.obj

.PHONY : Seqlist.obj

# target to build an object file
Seqlist.cpp.obj:
	$(MAKE) -f CMakeFiles\seqlist.dir\build.make CMakeFiles/seqlist.dir/Seqlist.cpp.obj
.PHONY : Seqlist.cpp.obj

Seqlist.i: Seqlist.cpp.i

.PHONY : Seqlist.i

# target to preprocess a source file
Seqlist.cpp.i:
	$(MAKE) -f CMakeFiles\seqlist.dir\build.make CMakeFiles/seqlist.dir/Seqlist.cpp.i
.PHONY : Seqlist.cpp.i

Seqlist.s: Seqlist.cpp.s

.PHONY : Seqlist.s

# target to generate assembly for a file
Seqlist.cpp.s:
	$(MAKE) -f CMakeFiles\seqlist.dir\build.make CMakeFiles/seqlist.dir/Seqlist.cpp.s
.PHONY : Seqlist.cpp.s

casttype.obj: casttype.cpp.obj

.PHONY : casttype.obj

# target to build an object file
casttype.cpp.obj:
	$(MAKE) -f CMakeFiles\casttype.dir\build.make CMakeFiles/casttype.dir/casttype.cpp.obj
.PHONY : casttype.cpp.obj

casttype.i: casttype.cpp.i

.PHONY : casttype.i

# target to preprocess a source file
casttype.cpp.i:
	$(MAKE) -f CMakeFiles\casttype.dir\build.make CMakeFiles/casttype.dir/casttype.cpp.i
.PHONY : casttype.cpp.i

casttype.s: casttype.cpp.s

.PHONY : casttype.s

# target to generate assembly for a file
casttype.cpp.s:
	$(MAKE) -f CMakeFiles\casttype.dir\build.make CMakeFiles/casttype.dir/casttype.cpp.s
.PHONY : casttype.cpp.s

const/const_summed_up.obj: const/const_summed_up.cpp.obj

.PHONY : const/const_summed_up.obj

# target to build an object file
const/const_summed_up.cpp.obj:
	$(MAKE) -f CMakeFiles\const.dir\build.make CMakeFiles/const.dir/const/const_summed_up.cpp.obj
.PHONY : const/const_summed_up.cpp.obj

const/const_summed_up.i: const/const_summed_up.cpp.i

.PHONY : const/const_summed_up.i

# target to preprocess a source file
const/const_summed_up.cpp.i:
	$(MAKE) -f CMakeFiles\const.dir\build.make CMakeFiles/const.dir/const/const_summed_up.cpp.i
.PHONY : const/const_summed_up.cpp.i

const/const_summed_up.s: const/const_summed_up.cpp.s

.PHONY : const/const_summed_up.s

# target to generate assembly for a file
const/const_summed_up.cpp.s:
	$(MAKE) -f CMakeFiles\const.dir\build.make CMakeFiles/const.dir/const/const_summed_up.cpp.s
.PHONY : const/const_summed_up.cpp.s

container.obj: container.cpp.obj

.PHONY : container.obj

# target to build an object file
container.cpp.obj:
	$(MAKE) -f CMakeFiles\container.dir\build.make CMakeFiles/container.dir/container.cpp.obj
.PHONY : container.cpp.obj

container.i: container.cpp.i

.PHONY : container.i

# target to preprocess a source file
container.cpp.i:
	$(MAKE) -f CMakeFiles\container.dir\build.make CMakeFiles/container.dir/container.cpp.i
.PHONY : container.cpp.i

container.s: container.cpp.s

.PHONY : container.s

# target to generate assembly for a file
container.cpp.s:
	$(MAKE) -f CMakeFiles\container.dir\build.make CMakeFiles/container.dir/container.cpp.s
.PHONY : container.cpp.s

duotai/duotai.obj: duotai/duotai.cpp.obj

.PHONY : duotai/duotai.obj

# target to build an object file
duotai/duotai.cpp.obj:
	$(MAKE) -f CMakeFiles\duotai.dir\build.make CMakeFiles/duotai.dir/duotai/duotai.cpp.obj
.PHONY : duotai/duotai.cpp.obj

duotai/duotai.i: duotai/duotai.cpp.i

.PHONY : duotai/duotai.i

# target to preprocess a source file
duotai/duotai.cpp.i:
	$(MAKE) -f CMakeFiles\duotai.dir\build.make CMakeFiles/duotai.dir/duotai/duotai.cpp.i
.PHONY : duotai/duotai.cpp.i

duotai/duotai.s: duotai/duotai.cpp.s

.PHONY : duotai/duotai.s

# target to generate assembly for a file
duotai/duotai.cpp.s:
	$(MAKE) -f CMakeFiles\duotai.dir\build.make CMakeFiles/duotai.dir/duotai/duotai.cpp.s
.PHONY : duotai/duotai.cpp.s

duotai_extend.obj: duotai_extend.cpp.obj

.PHONY : duotai_extend.obj

# target to build an object file
duotai_extend.cpp.obj:
	$(MAKE) -f CMakeFiles\duotai_extend.dir\build.make CMakeFiles/duotai_extend.dir/duotai_extend.cpp.obj
.PHONY : duotai_extend.cpp.obj

duotai_extend.i: duotai_extend.cpp.i

.PHONY : duotai_extend.i

# target to preprocess a source file
duotai_extend.cpp.i:
	$(MAKE) -f CMakeFiles\duotai_extend.dir\build.make CMakeFiles/duotai_extend.dir/duotai_extend.cpp.i
.PHONY : duotai_extend.cpp.i

duotai_extend.s: duotai_extend.cpp.s

.PHONY : duotai_extend.s

# target to generate assembly for a file
duotai_extend.cpp.s:
	$(MAKE) -f CMakeFiles\duotai_extend.dir\build.make CMakeFiles/duotai_extend.dir/duotai_extend.cpp.s
.PHONY : duotai_extend.cpp.s

extend.obj: extend.cpp.obj

.PHONY : extend.obj

# target to build an object file
extend.cpp.obj:
	$(MAKE) -f CMakeFiles\extend.dir\build.make CMakeFiles/extend.dir/extend.cpp.obj
.PHONY : extend.cpp.obj

extend.i: extend.cpp.i

.PHONY : extend.i

# target to preprocess a source file
extend.cpp.i:
	$(MAKE) -f CMakeFiles\extend.dir\build.make CMakeFiles/extend.dir/extend.cpp.i
.PHONY : extend.cpp.i

extend.s: extend.cpp.s

.PHONY : extend.s

# target to generate assembly for a file
extend.cpp.s:
	$(MAKE) -f CMakeFiles\extend.dir\build.make CMakeFiles/extend.dir/extend.cpp.s
.PHONY : extend.cpp.s

friend/friends.obj: friend/friends.cpp.obj

.PHONY : friend/friends.obj

# target to build an object file
friend/friends.cpp.obj:
	$(MAKE) -f CMakeFiles\friend.dir\build.make CMakeFiles/friend.dir/friend/friends.cpp.obj
.PHONY : friend/friends.cpp.obj

friend/friends.i: friend/friends.cpp.i

.PHONY : friend/friends.i

# target to preprocess a source file
friend/friends.cpp.i:
	$(MAKE) -f CMakeFiles\friend.dir\build.make CMakeFiles/friend.dir/friend/friends.cpp.i
.PHONY : friend/friends.cpp.i

friend/friends.s: friend/friends.cpp.s

.PHONY : friend/friends.s

# target to generate assembly for a file
friend/friends.cpp.s:
	$(MAKE) -f CMakeFiles\friend.dir\build.make CMakeFiles/friend.dir/friend/friends.cpp.s
.PHONY : friend/friends.cpp.s

main.obj: main.cpp.obj

.PHONY : main.obj

# target to build an object file
main.cpp.obj:
	$(MAKE) -f CMakeFiles\cplusplus_base.dir\build.make CMakeFiles/cplusplus_base.dir/main.cpp.obj
.PHONY : main.cpp.obj

main.i: main.cpp.i

.PHONY : main.i

# target to preprocess a source file
main.cpp.i:
	$(MAKE) -f CMakeFiles\cplusplus_base.dir\build.make CMakeFiles/cplusplus_base.dir/main.cpp.i
.PHONY : main.cpp.i

main.s: main.cpp.s

.PHONY : main.s

# target to generate assembly for a file
main.cpp.s:
	$(MAKE) -f CMakeFiles\cplusplus_base.dir\build.make CMakeFiles/cplusplus_base.dir/main.cpp.s
.PHONY : main.cpp.s

namespace_demo.obj: namespace_demo.cpp.obj

.PHONY : namespace_demo.obj

# target to build an object file
namespace_demo.cpp.obj:
	$(MAKE) -f CMakeFiles\namespaces.dir\build.make CMakeFiles/namespaces.dir/namespace_demo.cpp.obj
.PHONY : namespace_demo.cpp.obj

namespace_demo.i: namespace_demo.cpp.i

.PHONY : namespace_demo.i

# target to preprocess a source file
namespace_demo.cpp.i:
	$(MAKE) -f CMakeFiles\namespaces.dir\build.make CMakeFiles/namespaces.dir/namespace_demo.cpp.i
.PHONY : namespace_demo.cpp.i

namespace_demo.s: namespace_demo.cpp.s

.PHONY : namespace_demo.s

# target to generate assembly for a file
namespace_demo.cpp.s:
	$(MAKE) -f CMakeFiles\namespaces.dir\build.make CMakeFiles/namespaces.dir/namespace_demo.cpp.s
.PHONY : namespace_demo.cpp.s

object_size.obj: object_size.cpp.obj

.PHONY : object_size.obj

# target to build an object file
object_size.cpp.obj:
	$(MAKE) -f CMakeFiles\object_size.dir\build.make CMakeFiles/object_size.dir/object_size.cpp.obj
.PHONY : object_size.cpp.obj

object_size.i: object_size.cpp.i

.PHONY : object_size.i

# target to preprocess a source file
object_size.cpp.i:
	$(MAKE) -f CMakeFiles\object_size.dir\build.make CMakeFiles/object_size.dir/object_size.cpp.i
.PHONY : object_size.cpp.i

object_size.s: object_size.cpp.s

.PHONY : object_size.s

# target to generate assembly for a file
object_size.cpp.s:
	$(MAKE) -f CMakeFiles\object_size.dir\build.make CMakeFiles/object_size.dir/object_size.cpp.s
.PHONY : object_size.cpp.s

string/teststring.obj: string/teststring.cpp.obj

.PHONY : string/teststring.obj

# target to build an object file
string/teststring.cpp.obj:
	$(MAKE) -f CMakeFiles\string.dir\build.make CMakeFiles/string.dir/string/teststring.cpp.obj
.PHONY : string/teststring.cpp.obj

string/teststring.i: string/teststring.cpp.i

.PHONY : string/teststring.i

# target to preprocess a source file
string/teststring.cpp.i:
	$(MAKE) -f CMakeFiles\string.dir\build.make CMakeFiles/string.dir/string/teststring.cpp.i
.PHONY : string/teststring.cpp.i

string/teststring.s: string/teststring.cpp.s

.PHONY : string/teststring.s

# target to generate assembly for a file
string/teststring.cpp.s:
	$(MAKE) -f CMakeFiles\string.dir\build.make CMakeFiles/string.dir/string/teststring.cpp.s
.PHONY : string/teststring.cpp.s

template/template.obj: template/template.cpp.obj

.PHONY : template/template.obj

# target to build an object file
template/template.cpp.obj:
	$(MAKE) -f CMakeFiles\template.dir\build.make CMakeFiles/template.dir/template/template.cpp.obj
.PHONY : template/template.cpp.obj

template/template.i: template/template.cpp.i

.PHONY : template/template.i

# target to preprocess a source file
template/template.cpp.i:
	$(MAKE) -f CMakeFiles\template.dir\build.make CMakeFiles/template.dir/template/template.cpp.i
.PHONY : template/template.cpp.i

template/template.s: template/template.cpp.s

.PHONY : template/template.s

# target to generate assembly for a file
template/template.cpp.s:
	$(MAKE) -f CMakeFiles\template.dir\build.make CMakeFiles/template.dir/template/template.cpp.s
.PHONY : template/template.cpp.s

# Help Target
help:
	@echo The following are some of the valid targets for this Makefile:
	@echo ... all (the default if no target is provided)
	@echo ... clean
	@echo ... depend
	@echo ... cplusplus_base
	@echo ... template
	@echo ... duotai
	@echo ... string
	@echo ... const
	@echo ... casttype
	@echo ... extend
	@echo ... namespaces
	@echo ... function
	@echo ... rebuild_cache
	@echo ... functionoverloading
	@echo ... friend
	@echo ... duotai_extend
	@echo ... object_size
	@echo ... seqlist
	@echo ... container
	@echo ... edit_cache
	@echo ... FunctionOverloading.obj
	@echo ... FunctionOverloading.i
	@echo ... FunctionOverloading.s
	@echo ... Funtion.obj
	@echo ... Funtion.i
	@echo ... Funtion.s
	@echo ... Seqlist.obj
	@echo ... Seqlist.i
	@echo ... Seqlist.s
	@echo ... casttype.obj
	@echo ... casttype.i
	@echo ... casttype.s
	@echo ... const/const_summed_up.obj
	@echo ... const/const_summed_up.i
	@echo ... const/const_summed_up.s
	@echo ... container.obj
	@echo ... container.i
	@echo ... container.s
	@echo ... duotai/duotai.obj
	@echo ... duotai/duotai.i
	@echo ... duotai/duotai.s
	@echo ... duotai_extend.obj
	@echo ... duotai_extend.i
	@echo ... duotai_extend.s
	@echo ... extend.obj
	@echo ... extend.i
	@echo ... extend.s
	@echo ... friend/friends.obj
	@echo ... friend/friends.i
	@echo ... friend/friends.s
	@echo ... main.obj
	@echo ... main.i
	@echo ... main.s
	@echo ... namespace_demo.obj
	@echo ... namespace_demo.i
	@echo ... namespace_demo.s
	@echo ... object_size.obj
	@echo ... object_size.i
	@echo ... object_size.s
	@echo ... string/teststring.obj
	@echo ... string/teststring.i
	@echo ... string/teststring.s
	@echo ... template/template.obj
	@echo ... template/template.i
	@echo ... template/template.s
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles\Makefile.cmake 0
.PHONY : cmake_check_build_system

